# .github/workflows/lambda-test.yml
name: Lambda Invokation Test

on:
  workflow_dispatch:  # Manual trigger
    inputs:
      function_name:
        description: 'Lambda function name to test'
        required: false
        default: 'mursst-icechunk-updater-staging'
  push:  # Remove this after testing
    branches: lambda-invoke-test
        
env:
  AWS_REGION: us-west-2
  LAMBDA_FUNCTION_NAME: ${{ github.event.inputs.function_name || 'mursst-icechunk-updater-staging'}}
  LOG_GROUP_NAME: /aws/lambda/${{ github.event.inputs.function_name || 'mursst-icechunk-updater-staging'}}
  AWS_ROLE_ARN: arn:aws:iam::444055461661:role/github-actions-role-eodc

jobs:
  test-lambda:
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Verify Lambda function exists
      run: |
        echo "üîç Checking if Lambda function exists..."
        aws lambda get-function \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --region ${{ env.AWS_REGION }}
        echo "‚úÖ Lambda function found"

    - name: Run Lambda tests with debugging
      run: |
        echo "Testing Lambda function: ${{ env.LAMBDA_FUNCTION_NAME }}"
        
        # Invoke Lambda
        if aws lambda invoke \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --payload '{}' \
          --region ${{ env.AWS_REGION }} \
          --cli-read-timeout 900 \
          --cli-connect-timeout 60 \
          --debug \
          response1.json; then
          
          echo "‚úÖ Lambda invocation successful"
          echo "Response:"
          cat response1.json
        else
          echo "‚ùå Lambda invocation failed - fetching logs..."
          
          # Get the latest log stream
          LATEST_STREAM=$(aws logs describe-log-streams \
            --log-group-name "/aws/lambda/${{ env.LAMBDA_FUNCTION_NAME }}" \
            --order-by LastEventTime \
            --descending \
            --max-items 1 \
            --region ${{ env.AWS_REGION }} \
            --query 'logStreams[0].logStreamName' \
            --output text)
          
          echo "Latest log stream: $LATEST_STREAM"
          
          # Get the log events
          if [ "$LATEST_STREAM" != "None" ] && [ "$LATEST_STREAM" != "" ]; then
            echo "Recent log events:"
            aws logs get-log-events \
              --log-group-name "/aws/lambda/${{ env.LAMBDA_FUNCTION_NAME }}" \
              --log-stream-name "$LATEST_STREAM" \
              --region ${{ env.AWS_REGION }} \
              --query 'events[*].message' \
              --output text
          else
            echo "No log streams found"
          fi
          
          exit 1
        fi
